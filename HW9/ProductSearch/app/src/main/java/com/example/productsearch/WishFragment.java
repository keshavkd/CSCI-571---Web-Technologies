package com.example.productsearch;import android.os.Build;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.annotation.RequiresApi;import android.support.v4.app.Fragment;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.support.v7.widget.Toolbar;import android.widget.TextView;import java.io.File;import java.io.FileInputStream;import java.io.ObjectInputStream;import java.util.ArrayList;import java.util.List;public class WishFragment extends Fragment {    String filename = "file10.txt";    RecyclerView wrc;    TextView norecords, wlist, wprice;    WishAdapter adap;    List<Entry> acList = new ArrayList<>();    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        Log.d("WISHHERE", "ONE");        return inflater.inflate(R.layout.fragment_wish_layout, container, false);    }    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        Log.d("WISHHERE", "TWO");        super.onViewCreated(view, savedInstanceState);//        Toolbar tb = getView().findViewById(R.id.toolbar_bottom);//        tb.setTitle("Wishlist total(0 items):");//        tb.setTitleTextColor(android.graphics.Color.WHITE);        wrc = view.findViewById(R.id.wishRec);        norecords = view.findViewById(R.id.nowishrec);        wlist = view.findViewById(R.id.wishTotal);        wprice = view.findViewById(R.id.wishPrice);        try {            FileInputStream fs = new FileInputStream(new File(getContext().getFilesDir(), filename));            Log.d("WISHSET", "FILE");            ObjectInputStream os = new ObjectInputStream(fs);            Log.d("WISHSET", "FILESTREAM");            List<Entry> ogJS = (List<Entry>) os.readObject();            Log.d("WISHSET", ogJS.toString());            if (ogJS.size() == 0) {                Log.d("WISHSET", "EMPTY");                wrc.setVisibility(view.GONE);                norecords.setVisibility(view.VISIBLE);                wlist.setText("Wishlist total(0 items):");                wprice.setText("$0.00");            } else if (ogJS.size() == 1) {                Log.d("WISHSET", "NOTEMPTY");                wrc.setVisibility(view.VISIBLE);                norecords.setVisibility(view.GONE);                wlist.setText("Wishlist total(1 item):");                wprice.setText(ogJS.get(0).priceSave);            } else {                Log.d("WISHSET", "NOTEMPTY>1");                wrc.setVisibility(view.VISIBLE);                norecords.setVisibility(view.GONE);                Double sum = 0.0;                int count = 0;                for (int i = 0; i < ogJS.size(); i++) {                    String tempP = ogJS.get(i).priceSave;                    tempP = tempP.substring(1);                    sum += Double.parseDouble(tempP);                    count++;                }                wprice.setText("$" + sum.toString());                wlist.setText("Wishlist total(" + count + " items):");            }            adap = new WishAdapter(getContext(), ogJS, this);            wrc.setLayoutManager(new GridLayoutManager(getContext(), 2));            wrc.setAdapter(adap);            adap.notifyDataSetChanged();        } catch (Exception e) {            Log.d("WISHSET", "ERROR");            e.printStackTrace();        }    }    public void refreshAdapter() {        List<Entry> ogJS = new ArrayList<>();        try {            FileInputStream fs = new FileInputStream(new File(getContext().getFilesDir(), filename));            Log.d("WISHSET", "FILE");            ObjectInputStream os = new ObjectInputStream(fs);            Log.d("WISHSET", "FILESTREAM");            ogJS = (List<Entry>) os.readObject();            Log.d("WISHSET", ogJS.toString());            if (ogJS.size() == 0) {                Log.d("WISHSET", "EMPTY");                wrc.setVisibility(getView().GONE);                norecords.setVisibility(getView().VISIBLE);                wlist.setText("Wishlist total(0 items):");                wprice.setText("$0.00");            } else if (ogJS.size() == 1) {                Log.d("WISHSET", "NOTEMPTY");                wrc.setVisibility(getView().VISIBLE);                norecords.setVisibility(getView().GONE);                wlist.setText("Wishlist total(1 item):");                wprice.setText(ogJS.get(0).priceSave);            } else {                Log.d("WISHSET", "NOTEMPTY>1");                wrc.setVisibility(getView().VISIBLE);                norecords.setVisibility(getView().GONE);                Double sum = 0.0;                int count = 0;                for (int i = 0; i < ogJS.size(); i++) {                    String tempP = ogJS.get(i).priceSave;                    tempP = tempP.substring(1);                    sum += Double.parseDouble(tempP);                    count++;                }                wprice.setText("$" + sum.toString());                wlist.setText("Wishlist total(" + count + " items):");            }        } catch (Exception e) {        }        adap = new WishAdapter(getContext(), ogJS, this);        wrc.setLayoutManager(new GridLayoutManager(getContext(), 2));        wrc.setAdapter(adap);        adap.notifyDataSetChanged();    }    @Override    public void onResume() {        super.onResume();        refreshAdapter();    }}